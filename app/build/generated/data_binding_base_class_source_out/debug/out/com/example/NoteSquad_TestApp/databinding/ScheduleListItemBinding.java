// Generated by view binder compiler. Do not edit!
package com.example.NoteSquad_TestApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.NoteSquad_TestApp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ScheduleListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView ScheduleAuthor;

  @NonNull
  public final TextView ScheduleDate;

  @NonNull
  public final TextView StudyMode;

  @NonNull
  public final TextView scheduleDescription;

  @NonNull
  public final TextView scheduleTitle;

  @NonNull
  public final TextView scheduleVenue;

  private ScheduleListItemBinding(@NonNull LinearLayout rootView, @NonNull TextView ScheduleAuthor,
      @NonNull TextView ScheduleDate, @NonNull TextView StudyMode,
      @NonNull TextView scheduleDescription, @NonNull TextView scheduleTitle,
      @NonNull TextView scheduleVenue) {
    this.rootView = rootView;
    this.ScheduleAuthor = ScheduleAuthor;
    this.ScheduleDate = ScheduleDate;
    this.StudyMode = StudyMode;
    this.scheduleDescription = scheduleDescription;
    this.scheduleTitle = scheduleTitle;
    this.scheduleVenue = scheduleVenue;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScheduleListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScheduleListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.schedule_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScheduleListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Schedule_Author;
      TextView ScheduleAuthor = ViewBindings.findChildViewById(rootView, id);
      if (ScheduleAuthor == null) {
        break missingId;
      }

      id = R.id.Schedule_date;
      TextView ScheduleDate = ViewBindings.findChildViewById(rootView, id);
      if (ScheduleDate == null) {
        break missingId;
      }

      id = R.id.Study_Mode;
      TextView StudyMode = ViewBindings.findChildViewById(rootView, id);
      if (StudyMode == null) {
        break missingId;
      }

      id = R.id.schedule_description;
      TextView scheduleDescription = ViewBindings.findChildViewById(rootView, id);
      if (scheduleDescription == null) {
        break missingId;
      }

      id = R.id.schedule_title;
      TextView scheduleTitle = ViewBindings.findChildViewById(rootView, id);
      if (scheduleTitle == null) {
        break missingId;
      }

      id = R.id.schedule_venue;
      TextView scheduleVenue = ViewBindings.findChildViewById(rootView, id);
      if (scheduleVenue == null) {
        break missingId;
      }

      return new ScheduleListItemBinding((LinearLayout) rootView, ScheduleAuthor, ScheduleDate,
          StudyMode, scheduleDescription, scheduleTitle, scheduleVenue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
