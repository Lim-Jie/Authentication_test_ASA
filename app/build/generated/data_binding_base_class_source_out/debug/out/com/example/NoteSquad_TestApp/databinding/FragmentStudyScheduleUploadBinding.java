// Generated by view binder compiler. Do not edit!
package com.example.NoteSquad_TestApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.NoteSquad_TestApp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStudyScheduleUploadBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioGroup RadioGroupStudySchedule;

  @NonNull
  public final Button SubmitSchedule;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final TextView chooseDate;

  @NonNull
  public final TextView chooseTime;

  @NonNull
  public final TextView createSessionTitle;

  @NonNull
  public final EditText editTextStudyDescription;

  @NonNull
  public final EditText editTextSubject;

  @NonNull
  public final EditText editTextVenue;

  @NonNull
  public final RadioButton radioButtonOnline;

  @NonNull
  public final RadioButton radioButtonPhysical;

  @NonNull
  public final TextView sessionDetailsText;

  @NonNull
  public final TextView subjectNameText;

  @NonNull
  public final TimePicker timePicker;

  private FragmentStudyScheduleUploadBinding(@NonNull LinearLayout rootView,
      @NonNull RadioGroup RadioGroupStudySchedule, @NonNull Button SubmitSchedule,
      @NonNull CalendarView calendarView, @NonNull TextView chooseDate,
      @NonNull TextView chooseTime, @NonNull TextView createSessionTitle,
      @NonNull EditText editTextStudyDescription, @NonNull EditText editTextSubject,
      @NonNull EditText editTextVenue, @NonNull RadioButton radioButtonOnline,
      @NonNull RadioButton radioButtonPhysical, @NonNull TextView sessionDetailsText,
      @NonNull TextView subjectNameText, @NonNull TimePicker timePicker) {
    this.rootView = rootView;
    this.RadioGroupStudySchedule = RadioGroupStudySchedule;
    this.SubmitSchedule = SubmitSchedule;
    this.calendarView = calendarView;
    this.chooseDate = chooseDate;
    this.chooseTime = chooseTime;
    this.createSessionTitle = createSessionTitle;
    this.editTextStudyDescription = editTextStudyDescription;
    this.editTextSubject = editTextSubject;
    this.editTextVenue = editTextVenue;
    this.radioButtonOnline = radioButtonOnline;
    this.radioButtonPhysical = radioButtonPhysical;
    this.sessionDetailsText = sessionDetailsText;
    this.subjectNameText = subjectNameText;
    this.timePicker = timePicker;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStudyScheduleUploadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStudyScheduleUploadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_study_schedule_upload, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStudyScheduleUploadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RadioGroupStudySchedule;
      RadioGroup RadioGroupStudySchedule = ViewBindings.findChildViewById(rootView, id);
      if (RadioGroupStudySchedule == null) {
        break missingId;
      }

      id = R.id.SubmitSchedule;
      Button SubmitSchedule = ViewBindings.findChildViewById(rootView, id);
      if (SubmitSchedule == null) {
        break missingId;
      }

      id = R.id.calendarView;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.chooseDate;
      TextView chooseDate = ViewBindings.findChildViewById(rootView, id);
      if (chooseDate == null) {
        break missingId;
      }

      id = R.id.chooseTime;
      TextView chooseTime = ViewBindings.findChildViewById(rootView, id);
      if (chooseTime == null) {
        break missingId;
      }

      id = R.id.createSessionTitle;
      TextView createSessionTitle = ViewBindings.findChildViewById(rootView, id);
      if (createSessionTitle == null) {
        break missingId;
      }

      id = R.id.editTextStudyDescription;
      EditText editTextStudyDescription = ViewBindings.findChildViewById(rootView, id);
      if (editTextStudyDescription == null) {
        break missingId;
      }

      id = R.id.editTextSubject;
      EditText editTextSubject = ViewBindings.findChildViewById(rootView, id);
      if (editTextSubject == null) {
        break missingId;
      }

      id = R.id.editTextVenue;
      EditText editTextVenue = ViewBindings.findChildViewById(rootView, id);
      if (editTextVenue == null) {
        break missingId;
      }

      id = R.id.radioButtonOnline;
      RadioButton radioButtonOnline = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonOnline == null) {
        break missingId;
      }

      id = R.id.radioButtonPhysical;
      RadioButton radioButtonPhysical = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonPhysical == null) {
        break missingId;
      }

      id = R.id.sessionDetailsText;
      TextView sessionDetailsText = ViewBindings.findChildViewById(rootView, id);
      if (sessionDetailsText == null) {
        break missingId;
      }

      id = R.id.subjectNameText;
      TextView subjectNameText = ViewBindings.findChildViewById(rootView, id);
      if (subjectNameText == null) {
        break missingId;
      }

      id = R.id.timePicker;
      TimePicker timePicker = ViewBindings.findChildViewById(rootView, id);
      if (timePicker == null) {
        break missingId;
      }

      return new FragmentStudyScheduleUploadBinding((LinearLayout) rootView,
          RadioGroupStudySchedule, SubmitSchedule, calendarView, chooseDate, chooseTime,
          createSessionTitle, editTextStudyDescription, editTextSubject, editTextVenue,
          radioButtonOnline, radioButtonPhysical, sessionDetailsText, subjectNameText, timePicker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
