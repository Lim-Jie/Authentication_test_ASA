// Generated by view binder compiler. Do not edit!
package com.example.NoteSquad_TestApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.NoteSquad_TestApp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVisitProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView VPConnections;

  @NonNull
  public final LinearLayout VPConnectionsLinearLayout;

  @NonNull
  public final TextView VPConnectionsVal;

  @NonNull
  public final ConstraintLayout VPConstraintLayout;

  @NonNull
  public final TextView VPContributions;

  @NonNull
  public final LinearLayout VPContributionsLinearLayout;

  @NonNull
  public final TextView VPContributionsVal;

  @NonNull
  public final TextView VPEngagement;

  @NonNull
  public final LinearLayout VPEngagementLinearLayout;

  @NonNull
  public final TextView VPEngagementVal;

  @NonNull
  public final TextView VPbiographyPP;

  @NonNull
  public final CardView VPcircularProfilepicBackground;

  @NonNull
  public final LinearLayout VPlinearLayout;

  @NonNull
  public final LinearLayout VPlinearLayout2;

  @NonNull
  public final LinearLayout VPlinearLayout3;

  @NonNull
  public final TextView VPprofileEmail;

  @NonNull
  public final TextView VPprofileNameUser;

  @NonNull
  public final ImageView VPprofilePictureUser;

  @NonNull
  public final RecyclerView VPrecyclerView;

  @NonNull
  public final TextView VPuniversityPP;

  @NonNull
  public final Button connectButton;

  private FragmentVisitProfileBinding(@NonNull ScrollView rootView, @NonNull TextView VPConnections,
      @NonNull LinearLayout VPConnectionsLinearLayout, @NonNull TextView VPConnectionsVal,
      @NonNull ConstraintLayout VPConstraintLayout, @NonNull TextView VPContributions,
      @NonNull LinearLayout VPContributionsLinearLayout, @NonNull TextView VPContributionsVal,
      @NonNull TextView VPEngagement, @NonNull LinearLayout VPEngagementLinearLayout,
      @NonNull TextView VPEngagementVal, @NonNull TextView VPbiographyPP,
      @NonNull CardView VPcircularProfilepicBackground, @NonNull LinearLayout VPlinearLayout,
      @NonNull LinearLayout VPlinearLayout2, @NonNull LinearLayout VPlinearLayout3,
      @NonNull TextView VPprofileEmail, @NonNull TextView VPprofileNameUser,
      @NonNull ImageView VPprofilePictureUser, @NonNull RecyclerView VPrecyclerView,
      @NonNull TextView VPuniversityPP, @NonNull Button connectButton) {
    this.rootView = rootView;
    this.VPConnections = VPConnections;
    this.VPConnectionsLinearLayout = VPConnectionsLinearLayout;
    this.VPConnectionsVal = VPConnectionsVal;
    this.VPConstraintLayout = VPConstraintLayout;
    this.VPContributions = VPContributions;
    this.VPContributionsLinearLayout = VPContributionsLinearLayout;
    this.VPContributionsVal = VPContributionsVal;
    this.VPEngagement = VPEngagement;
    this.VPEngagementLinearLayout = VPEngagementLinearLayout;
    this.VPEngagementVal = VPEngagementVal;
    this.VPbiographyPP = VPbiographyPP;
    this.VPcircularProfilepicBackground = VPcircularProfilepicBackground;
    this.VPlinearLayout = VPlinearLayout;
    this.VPlinearLayout2 = VPlinearLayout2;
    this.VPlinearLayout3 = VPlinearLayout3;
    this.VPprofileEmail = VPprofileEmail;
    this.VPprofileNameUser = VPprofileNameUser;
    this.VPprofilePictureUser = VPprofilePictureUser;
    this.VPrecyclerView = VPrecyclerView;
    this.VPuniversityPP = VPuniversityPP;
    this.connectButton = connectButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVisitProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVisitProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_visit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVisitProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.VPConnections;
      TextView VPConnections = ViewBindings.findChildViewById(rootView, id);
      if (VPConnections == null) {
        break missingId;
      }

      id = R.id.VPConnectionsLinearLayout;
      LinearLayout VPConnectionsLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (VPConnectionsLinearLayout == null) {
        break missingId;
      }

      id = R.id.VPConnectionsVal;
      TextView VPConnectionsVal = ViewBindings.findChildViewById(rootView, id);
      if (VPConnectionsVal == null) {
        break missingId;
      }

      id = R.id.VPConstraintLayout;
      ConstraintLayout VPConstraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (VPConstraintLayout == null) {
        break missingId;
      }

      id = R.id.VPContributions;
      TextView VPContributions = ViewBindings.findChildViewById(rootView, id);
      if (VPContributions == null) {
        break missingId;
      }

      id = R.id.VPContributionsLinearLayout;
      LinearLayout VPContributionsLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (VPContributionsLinearLayout == null) {
        break missingId;
      }

      id = R.id.VPContributionsVal;
      TextView VPContributionsVal = ViewBindings.findChildViewById(rootView, id);
      if (VPContributionsVal == null) {
        break missingId;
      }

      id = R.id.VPEngagement;
      TextView VPEngagement = ViewBindings.findChildViewById(rootView, id);
      if (VPEngagement == null) {
        break missingId;
      }

      id = R.id.VPEngagementLinearLayout;
      LinearLayout VPEngagementLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (VPEngagementLinearLayout == null) {
        break missingId;
      }

      id = R.id.VPEngagementVal;
      TextView VPEngagementVal = ViewBindings.findChildViewById(rootView, id);
      if (VPEngagementVal == null) {
        break missingId;
      }

      id = R.id.VPbiographyPP;
      TextView VPbiographyPP = ViewBindings.findChildViewById(rootView, id);
      if (VPbiographyPP == null) {
        break missingId;
      }

      id = R.id.VPcircularProfilepicBackground;
      CardView VPcircularProfilepicBackground = ViewBindings.findChildViewById(rootView, id);
      if (VPcircularProfilepicBackground == null) {
        break missingId;
      }

      id = R.id.VPlinearLayout;
      LinearLayout VPlinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (VPlinearLayout == null) {
        break missingId;
      }

      id = R.id.VPlinearLayout2;
      LinearLayout VPlinearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (VPlinearLayout2 == null) {
        break missingId;
      }

      id = R.id.VPlinearLayout3;
      LinearLayout VPlinearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (VPlinearLayout3 == null) {
        break missingId;
      }

      id = R.id.VPprofileEmail;
      TextView VPprofileEmail = ViewBindings.findChildViewById(rootView, id);
      if (VPprofileEmail == null) {
        break missingId;
      }

      id = R.id.VPprofileNameUser;
      TextView VPprofileNameUser = ViewBindings.findChildViewById(rootView, id);
      if (VPprofileNameUser == null) {
        break missingId;
      }

      id = R.id.VPprofilePictureUser;
      ImageView VPprofilePictureUser = ViewBindings.findChildViewById(rootView, id);
      if (VPprofilePictureUser == null) {
        break missingId;
      }

      id = R.id.VPrecyclerView;
      RecyclerView VPrecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (VPrecyclerView == null) {
        break missingId;
      }

      id = R.id.VPuniversityPP;
      TextView VPuniversityPP = ViewBindings.findChildViewById(rootView, id);
      if (VPuniversityPP == null) {
        break missingId;
      }

      id = R.id.connectButton;
      Button connectButton = ViewBindings.findChildViewById(rootView, id);
      if (connectButton == null) {
        break missingId;
      }

      return new FragmentVisitProfileBinding((ScrollView) rootView, VPConnections,
          VPConnectionsLinearLayout, VPConnectionsVal, VPConstraintLayout, VPContributions,
          VPContributionsLinearLayout, VPContributionsVal, VPEngagement, VPEngagementLinearLayout,
          VPEngagementVal, VPbiographyPP, VPcircularProfilepicBackground, VPlinearLayout,
          VPlinearLayout2, VPlinearLayout3, VPprofileEmail, VPprofileNameUser, VPprofilePictureUser,
          VPrecyclerView, VPuniversityPP, connectButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
